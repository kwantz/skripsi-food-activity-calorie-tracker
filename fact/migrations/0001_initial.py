# Generated by Django 2.1.7 on 2019-05-09 05:59

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('x_axis_jitter', models.FloatField()),
                ('x_axis_mean_crossing_rate', models.FloatField()),
                ('x_axis_mean', models.FloatField()),
                ('x_axis_std', models.FloatField()),
                ('x_axis_var', models.FloatField()),
                ('x_axis_min', models.FloatField()),
                ('x_axis_max', models.FloatField()),
                ('x_axis_acf_mean', models.FloatField()),
                ('x_axis_acf_std', models.FloatField()),
                ('x_axis_acv_mean', models.FloatField()),
                ('x_axis_acv_std', models.FloatField()),
                ('x_axis_skew', models.FloatField()),
                ('x_axis_kurtosis', models.FloatField()),
                ('x_axis_sqrt', models.FloatField()),
                ('y_axis_jitter', models.FloatField()),
                ('y_axis_mean_crossing_rate', models.FloatField()),
                ('y_axis_mean', models.FloatField()),
                ('y_axis_std', models.FloatField()),
                ('y_axis_var', models.FloatField()),
                ('y_axis_min', models.FloatField()),
                ('y_axis_max', models.FloatField()),
                ('y_axis_acf_mean', models.FloatField()),
                ('y_axis_acf_std', models.FloatField()),
                ('y_axis_acv_mean', models.FloatField()),
                ('y_axis_acv_std', models.FloatField()),
                ('y_axis_skew', models.FloatField()),
                ('y_axis_kurtosis', models.FloatField()),
                ('y_axis_sqrt', models.FloatField()),
                ('z_axis_jitter', models.FloatField()),
                ('z_axis_mean_crossing_rate', models.FloatField()),
                ('z_axis_mean', models.FloatField()),
                ('z_axis_std', models.FloatField()),
                ('z_axis_var', models.FloatField()),
                ('z_axis_min', models.FloatField()),
                ('z_axis_max', models.FloatField()),
                ('z_axis_acf_mean', models.FloatField()),
                ('z_axis_acf_std', models.FloatField()),
                ('z_axis_acv_mean', models.FloatField()),
                ('z_axis_acv_std', models.FloatField()),
                ('z_axis_skew', models.FloatField()),
                ('z_axis_kurtosis', models.FloatField()),
                ('z_axis_sqrt', models.FloatField()),
                ('magnitude_jitter', models.FloatField()),
                ('magnitude_mean_crossing_rate', models.FloatField()),
                ('magnitude_mean', models.FloatField()),
                ('magnitude_std', models.FloatField()),
                ('magnitude_var', models.FloatField()),
                ('magnitude_min', models.FloatField()),
                ('magnitude_max', models.FloatField()),
                ('magnitude_acf_mean', models.FloatField()),
                ('magnitude_acf_std', models.FloatField()),
                ('magnitude_acv_mean', models.FloatField()),
                ('magnitude_acv_std', models.FloatField()),
                ('magnitude_skew', models.FloatField()),
                ('magnitude_kurtosis', models.FloatField()),
                ('magnitude_sqrt', models.FloatField()),
                ('requested_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'fact_activity',
            },
        ),
        migrations.CreateModel(
            name='ActivityLabel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('met', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'fact_activity_label',
            },
        ),
        migrations.CreateModel(
            name='ActivityLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=10)),
                ('tdee', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'fact_activity_level',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('author', models.TextField()),
                ('image', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'fact_article',
            },
        ),
        migrations.CreateModel(
            name='ArticleView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.Article')),
            ],
            options={
                'db_table': 'fact_article_view',
            },
        ),
        migrations.CreateModel(
            name='CalorieBurnt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_track', models.DateTimeField()),
                ('duration', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('activity_label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.ActivityLabel')),
            ],
            options={
                'db_table': 'fact_calorie_burnt',
            },
        ),
        migrations.CreateModel(
            name='CalorieIntake',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'fact_calorie_intake',
            },
        ),
        migrations.CreateModel(
            name='EatTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('percentage', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'fact_eat_time',
            },
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('calorie', models.FloatField()),
                ('carbohydrate', models.FloatField()),
                ('protein', models.FloatField()),
                ('fat', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'fact_food',
            },
        ),
        migrations.CreateModel(
            name='FoodCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'fact_food_category',
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'fact_gender',
            },
        ),
        migrations.CreateModel(
            name='HistorySearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'fact_history_search',
            },
        ),
        migrations.CreateModel(
            name='Meal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'fact_meal',
            },
        ),
        migrations.CreateModel(
            name='MealDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.Food')),
                ('meal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.Meal')),
            ],
            options={
                'db_table': 'fact_meal_detail',
            },
        ),
        migrations.CreateModel(
            name='Quote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desc', models.CharField(max_length=255)),
                ('author', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'fact_quote',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'fact_role',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('password', models.CharField(max_length=255)),
                ('weight', models.FloatField()),
                ('height', models.FloatField()),
                ('birth_year', models.IntegerField()),
                ('reason_block', models.CharField(max_length=255, null=True)),
                ('blocked_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(null=True)),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.Gender')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.Role')),
            ],
            options={
                'db_table': 'fact_user',
            },
        ),
        migrations.AddField(
            model_name='quote',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.User'),
        ),
        migrations.AddField(
            model_name='meal',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.User'),
        ),
        migrations.AddField(
            model_name='historysearch',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.User'),
        ),
        migrations.AddField(
            model_name='food',
            name='food_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.FoodCategory'),
        ),
        migrations.AddField(
            model_name='food',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.User'),
        ),
        migrations.AddField(
            model_name='calorieintake',
            name='eat_time',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.EatTime'),
        ),
        migrations.AddField(
            model_name='calorieintake',
            name='food',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='fact.Food'),
        ),
        migrations.AddField(
            model_name='calorieintake',
            name='meal',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='fact.Meal'),
        ),
        migrations.AddField(
            model_name='calorieintake',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.User'),
        ),
        migrations.AddField(
            model_name='calorieburnt',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.User'),
        ),
        migrations.AddField(
            model_name='articleview',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.User'),
        ),
        migrations.AddField(
            model_name='article',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.User'),
        ),
        migrations.AddField(
            model_name='activitylevel',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.User'),
        ),
        migrations.AddField(
            model_name='activity',
            name='label',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.ActivityLabel'),
        ),
        migrations.AddField(
            model_name='activity',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fact.User'),
        ),
    ]
